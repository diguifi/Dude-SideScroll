/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/Game.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./scripts/Bat.ts":
/*!************************!*\
  !*** ./scripts/Bat.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Bat extends Phaser.Sprite {\r\n        constructor(game, x, y, gravity, speed, player) {\r\n            super(game, x, y, 'bat', 0);\r\n            this.speed = 125;\r\n            // attributes\r\n            this.speed = speed;\r\n            this.player = player;\r\n            this.fieldOfView = 200;\r\n            // sprite size\r\n            this.size = 2;\r\n            this.scale.setTo(this.size, this.size);\r\n            // sprite anchor\r\n            this.anchor.setTo(0.5, 0);\r\n            this.wakeAnim = this.animations.add('wake', [0, 1, 2, 3, 4], 8, false);\r\n            this.flyAnim = this.animations.add('fly', [5, 6, 7, 8, 9], 8, true);\r\n            this.wakeAnim.onComplete.add(this.startFly, this);\r\n            this.isSleeping = true;\r\n            this.isChasing = false;\r\n            // physics\r\n            this.game.physics.arcade.enableBody(this);\r\n            this.body.setSize(16, 16, 0, 0);\r\n            this.body.collideWorldBounds = true;\r\n            this.body.gravity.y = -gravity;\r\n            // initialize movement\r\n            this.movingRight = true;\r\n            game.add.existing(this);\r\n        }\r\n        update() {\r\n            this.body.velocity.x = 0;\r\n            if (this.isSleeping) {\r\n                if (this.checkIfPlayerIsInRange()) {\r\n                    this.wake();\r\n                }\r\n            }\r\n            if (this.isChasing) {\r\n                this.chase();\r\n            }\r\n        }\r\n        wake() {\r\n            this.wakeAnim.play();\r\n            this.fieldOfView += 75;\r\n            this.isSleeping = false;\r\n        }\r\n        startFly() {\r\n            this.flyAnim.play();\r\n            this.isChasing = true;\r\n        }\r\n        chase() {\r\n            if (this.checkIfPlayerIsInRange()) {\r\n                this.game.physics.arcade.moveToObject(this, this.player, this.speed);\r\n            }\r\n            else {\r\n                this.body.velocity.x = 0;\r\n                this.body.velocity.y = 0;\r\n            }\r\n            if (this.body.velocity.x < 0) {\r\n                if (this.scale.x == this.size) {\r\n                    this.scale.x = -this.size;\r\n                }\r\n            }\r\n            else {\r\n                if (this.scale.x == -this.size) {\r\n                    this.scale.x = this.size;\r\n                }\r\n            }\r\n        }\r\n        checkIfPlayerIsInRange() {\r\n            return ((this.player.position.x > this.position.x - this.fieldOfView &&\r\n                this.player.position.x < this.position.x + this.fieldOfView) &&\r\n                this.player.position.y < this.position.y + this.fieldOfView);\r\n        }\r\n    }\r\n    exports.Bat = Bat;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Bat.ts?");

/***/ }),

/***/ "./scripts/ControllerManager.ts":
/*!**************************************!*\
  !*** ./scripts/ControllerManager.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class ControllerManager {\r\n        constructor(player, game) {\r\n            this.game = game;\r\n            if (!this.game.device.desktop)\r\n                this.getVirtualButtonsInput(player);\r\n        }\r\n        getKeyboardInput(player) {\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.SHIFT))\r\n                player.running = true;\r\n            else\r\n                player.running = false;\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT))\r\n                player.movingLeft = true;\r\n            else\r\n                player.movingLeft = false;\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT))\r\n                player.movingRight = true;\r\n            else\r\n                player.movingRight = false;\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\r\n                player.pressingUp = true;\r\n                if (player.body.blocked.down)\r\n                    player.jump();\r\n            }\r\n            else {\r\n                player.pressingUp = false;\r\n            }\r\n            if (!this.game.input.keyboard.isDown(Phaser.Keyboard.UP))\r\n                if (!player.body.blocked.down)\r\n                    player.fall();\r\n        }\r\n        getVirtualButtonsInput(player) {\r\n            this.buttonjump = this.game.add.button(600, 310, 'buttonjump', null, this, 0, 1, 0, 1);\r\n            this.buttonjump.fixedToCamera = true;\r\n            this.buttonjump.events.onInputDown.add(function () { player.pressingUp = true; if (player.body.blocked.down)\r\n                player.jump(); });\r\n            this.buttonjump.events.onInputUp.add(function () { player.pressingUp = false; if (!player.body.blocked.down)\r\n                player.fall(); });\r\n            this.buttonfire = this.game.add.button(700, 310, 'buttonfire', null, this, 0, 1, 0, 1);\r\n            this.buttonfire.fixedToCamera = true;\r\n            this.buttonfire.events.onInputDown.add(function () { player.running = !player.running; });\r\n            this.buttonleft = this.game.add.button(0, 310, 'buttonhorizontal', null, this, 0, 1, 0, 1);\r\n            this.buttonleft.fixedToCamera = true;\r\n            this.buttonleft.events.onInputDown.add(function () { player.movingLeft = true; });\r\n            this.buttonleft.events.onInputUp.add(function () { player.movingLeft = false; });\r\n            this.buttonright = this.game.add.button(160, 310, 'buttonhorizontal', null, this, 0, 1, 0, 1);\r\n            this.buttonright.fixedToCamera = true;\r\n            this.buttonright.events.onInputDown.add(function () { player.movingRight = true; });\r\n            this.buttonright.events.onInputUp.add(function () { player.movingRight = false; });\r\n        }\r\n    }\r\n    exports.ControllerManager = ControllerManager;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/ControllerManager.ts?");

/***/ }),

/***/ "./scripts/Enemy.ts":
/*!**************************!*\
  !*** ./scripts/Enemy.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Enemy extends Phaser.Sprite {\r\n        constructor(game, x, y, gravity, speed) {\r\n            super(game, x, y, 'enemy1', 0);\r\n            // attributes\r\n            this.localGravity = 200;\r\n            this.speed = speed;\r\n            // sprite size\r\n            this.size = 1.8;\r\n            this.scale.setTo(this.size, this.size);\r\n            // sprite anchor\r\n            this.anchor.setTo(0.5, 0);\r\n            // physics\r\n            this.game.physics.arcade.enableBody(this);\r\n            this.body.setSize(23, 19, 0, 0);\r\n            this.body.collideWorldBounds = true;\r\n            this.body.gravity.y = gravity;\r\n            // initialize movement\r\n            this.movingRight = true;\r\n            game.add.existing(this);\r\n        }\r\n        update() {\r\n            this.body.velocity.x = 0;\r\n            if (this.movingRight)\r\n                this.moveRight();\r\n            else if (this.movingLeft)\r\n                this.moveLeft();\r\n            if (this.body.blocked.right) {\r\n                this.movingRight = false;\r\n                this.movingLeft = true;\r\n            }\r\n            if (this.body.blocked.left) {\r\n                this.movingRight = true;\r\n                this.movingLeft = false;\r\n            }\r\n        }\r\n        moveRight() {\r\n            this.body.velocity.x = this.speed;\r\n            if (this.scale.x == -this.size) {\r\n                this.scale.x = this.size;\r\n            }\r\n        }\r\n        moveLeft() {\r\n            this.body.velocity.x = -this.speed;\r\n            if (this.scale.x == this.size) {\r\n                this.scale.x = -this.size;\r\n            }\r\n        }\r\n    }\r\n    exports.Enemy = Enemy;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Enemy.ts?");

/***/ }),

/***/ "./scripts/Game.ts":
/*!*************************!*\
  !*** ./scripts/Game.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Preloader */ \"./scripts/Preloader.ts\"), __webpack_require__(/*! ./MainMenu */ \"./scripts/MainMenu.ts\"), __webpack_require__(/*! ./levels/Level1 */ \"./scripts/levels/Level1.ts\"), __webpack_require__(/*! ./levels/Level2 */ \"./scripts/levels/Level2.ts\"), __webpack_require__(/*! ./levels/Level3 */ \"./scripts/levels/Level3.ts\"), __webpack_require__(/*! ./levels/Level4 */ \"./scripts/levels/Level4.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Preloader_1, MainMenu_1, Level1_1, Level2_1, Level3_1, Level4_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Game {\r\n        constructor() {\r\n            this.game = new Phaser.Game(800, 400, Phaser.CANVAS, 'content', {\r\n                preload: this.preload,\r\n                create: this.create\r\n            }, false, false, Phaser.Physics.Arcade);\r\n            this.game.state.add('Preloader', Preloader_1.Preloader, false);\r\n            this.game.state.add('MainMenu', MainMenu_1.MainMenu, false);\r\n            this.game.state.add('Level1', Level1_1.Level1, false);\r\n            this.game.state.add('Level2', Level2_1.Level2, false);\r\n            this.game.state.add('Level3', Level3_1.Level3, false);\r\n            this.game.state.add('Level4', Level4_1.Level4, false);\r\n        }\r\n        preload() {\r\n            this.game.time.advancedTiming = true;\r\n        }\r\n        create() {\r\n            this.game.time.desiredFps = 60;\r\n            this.game.renderer.renderSession.roundPixels = true;\r\n            if (this.game.device.desktop) {\r\n                this.game.scale.pageAlignHorizontally = true;\r\n            }\r\n            else {\r\n                this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n            }\r\n            this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n            this.game.physics.arcade.gravity.y = 200;\r\n            this.game.stage.backgroundColor = \"#aedecb\";\r\n            this.game.state.start('Preloader');\r\n        }\r\n    }\r\n    exports.Game = Game;\r\n    window.onload = () => {\r\n        var game = new Game();\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Game.ts?");

/***/ }),

/***/ "./scripts/Hud.ts":
/*!************************!*\
  !*** ./scripts/Hud.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Hud extends Phaser.Sprite {\r\n        constructor(game, player) {\r\n            super(game, 0, 0, 'hud', 0);\r\n            this.hearts = [];\r\n            this.fixedToCamera = true;\r\n            this.player = player;\r\n            this.lives = player.lives;\r\n            this.fillLives();\r\n            game.add.existing(this);\r\n        }\r\n        update() {\r\n            if (this.lives != this.player.lives) {\r\n                this.lives = this.player.lives;\r\n                this.fillLives();\r\n            }\r\n        }\r\n        fillLives() {\r\n            this.hearts.forEach(function (heart) {\r\n                heart.destroy();\r\n            });\r\n            this.hearts = [];\r\n            for (var i = 0; i < this.lives; i++)\r\n                this.hearts.push(this.game.add.sprite(35 * i + 30, 23, 'heart2'));\r\n            this.hearts.forEach(function (heart) {\r\n                heart.fixedToCamera = true;\r\n            });\r\n        }\r\n    }\r\n    exports.Hud = Hud;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Hud.ts?");

/***/ }),

/***/ "./scripts/MainMenu.ts":
/*!*****************************!*\
  !*** ./scripts/MainMenu.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./SoundManager */ \"./scripts/SoundManager.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SoundManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class MainMenu extends Phaser.State {\r\n        create() {\r\n            this.background = this.add.sprite(0, 0, 'titlepage');\r\n            this.background.alpha = 0;\r\n            this.logo = this.add.sprite(this.world.centerX, -300, 'logo');\r\n            this.logo.anchor.setTo(0.5, 0.5);\r\n            this.add.tween(this.logo).to({ y: 120 }, 1000, Phaser.Easing.Elastic.Out, true, 2000);\r\n            this.add.tween(this.background).to({ alpha: 1 }, 2000, Phaser.Easing.Bounce.InOut, true);\r\n            this.input.onDown.addOnce(this.fadeOut, this);\r\n            this.soundManager = new SoundManager_1.SoundManager(this.game);\r\n        }\r\n        fadeOut() {\r\n            this.add.tween(this.background).to({ alpha: 0 }, 2000, Phaser.Easing.Linear.None, true);\r\n            var tween = this.add.tween(this.logo).to({ y: 800 }, 2000, Phaser.Easing.Linear.None, true);\r\n            tween.onComplete.add(this.startGame, this);\r\n        }\r\n        startGame() {\r\n            this.game.state.start('Level1', true, false, this.soundManager);\r\n        }\r\n    }\r\n    exports.MainMenu = MainMenu;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/MainMenu.ts?");

/***/ }),

/***/ "./scripts/Player.ts":
/*!***************************!*\
  !*** ./scripts/Player.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./ControllerManager */ \"./scripts/ControllerManager.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, ControllerManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Player extends Phaser.Sprite {\r\n        constructor(game, x, y, speed, gravity, gems, lives, soundManager) {\r\n            super(game, x, y, 'dude', 0);\r\n            this.gems = gems;\r\n            this.lives = lives;\r\n            // attributes\r\n            this.spawnX = x;\r\n            this.spawnY = y;\r\n            this.playingOnDesktop = this.game.device.desktop;\r\n            this.localGravity = gravity;\r\n            this.speedBonus = 50;\r\n            this.jumpBonus = 50;\r\n            this.speed = speed;\r\n            this.jumpStrength = gravity + (gravity * 0.4);\r\n            this.jumping = false;\r\n            this.pressingUp = false;\r\n            this.dead = false;\r\n            this.fadeComplete = false;\r\n            // sprite size\r\n            this.size = 1.8;\r\n            this.scale.setTo(this.size, this.size);\r\n            // sprite anchor\r\n            this.anchor.setTo(0.5, 0);\r\n            this.animations.add('walk', [0, 1, 2, 3], 10, true);\r\n            this.animations.add('damaged', [4, 5, 6, 7], 10, false);\r\n            this.animSpeeds = [8, 13];\r\n            // physics\r\n            this.game.physics.arcade.enableBody(this);\r\n            this.body.setSize(16, 21, 0, 0);\r\n            this.body.collideWorldBounds = false;\r\n            this.body.gravity.y = gravity;\r\n            this.body.bounce.y = 0.2;\r\n            // controls\r\n            this.controller = new ControllerManager_1.ControllerManager(this, this.game);\r\n            // sound\r\n            this.soundManager = soundManager;\r\n            game.add.existing(this);\r\n        }\r\n        update() {\r\n            this.body.velocity.x = 0;\r\n            if (!this.dead) {\r\n                if (this.movingRight)\r\n                    this.moveRight();\r\n                else if (this.movingLeft)\r\n                    this.moveLeft();\r\n                else\r\n                    this.animations.frame = 0;\r\n                if (this.playingOnDesktop)\r\n                    this.controller.getKeyboardInput(this);\r\n                if (this.jumping) {\r\n                    if (this.body.blocked.down) {\r\n                        this.soundManager.fall.volume = 0.3;\r\n                        this.soundManager.fall.play();\r\n                        this.jumping = false;\r\n                    }\r\n                }\r\n                if (this.y > 450)\r\n                    this.playerDamage(this.soundManager);\r\n            }\r\n            else {\r\n                if (this.fadeComplete)\r\n                    this.playerDamageEffects(this.soundManager);\r\n            }\r\n        }\r\n        playerDamage(soundManager) {\r\n            this.soundManager.damage.play();\r\n            this.dead = true;\r\n            this.body.enable = false;\r\n            this.animations.play('damaged');\r\n            this.game.camera.fade(0x00000, 500);\r\n            this.game.camera.onFadeComplete.add(this.fadeCompleted, this);\r\n        }\r\n        fadeCompleted() {\r\n            this.fadeComplete = true;\r\n        }\r\n        playerDamageEffects(soundManager) {\r\n            this.game.camera.resetFX();\r\n            this.body.enable = true;\r\n            this.lives--;\r\n            this.position.x = this.spawnX;\r\n            this.position.y = this.spawnY;\r\n            this.dead = false;\r\n            if (this.lives < 0) {\r\n                this.soundManager.music.stop();\r\n                this.soundManager = null;\r\n                this.game.state.start('MainMenu');\r\n            }\r\n            this.fadeComplete = false;\r\n        }\r\n        moveRight() {\r\n            if (this.position.x < this.game.world.bounds.bottomRight.x) {\r\n                if (this.running) {\r\n                    this.animations.play('walk').speed = this.animSpeeds[1];\r\n                    this.body.velocity.x = this.speed + this.speedBonus;\r\n                }\r\n                else {\r\n                    this.animations.play('walk').speed = this.animSpeeds[0];\r\n                    this.body.velocity.x = this.speed;\r\n                }\r\n                if (this.scale.x == -this.size) {\r\n                    this.scale.x = this.size;\r\n                }\r\n            }\r\n            else {\r\n                this.position.x = this.game.world.bounds.bottomRight.x - 0.1;\r\n            }\r\n        }\r\n        moveLeft() {\r\n            if (this.position.x > 4) {\r\n                if (this.running) {\r\n                    this.animations.play('walk').speed = this.animSpeeds[1];\r\n                    this.body.velocity.x = -this.speed - this.speedBonus;\r\n                }\r\n                else {\r\n                    this.animations.play('walk').speed = this.animSpeeds[0];\r\n                    this.body.velocity.x = -this.speed;\r\n                }\r\n                if (this.scale.x == this.size) {\r\n                    this.scale.x = -this.size;\r\n                }\r\n            }\r\n            else {\r\n                this.position.x = 4.1;\r\n            }\r\n        }\r\n        jump() {\r\n            if (!this.jumping) {\r\n                if (this.running)\r\n                    if (this.body.velocity.x != 0)\r\n                        this.body.velocity.y = -this.jumpStrength - this.jumpBonus;\r\n                    else\r\n                        this.body.velocity.y = -this.jumpStrength;\r\n                else\r\n                    this.body.velocity.y = -this.jumpStrength;\r\n                this.soundManager.jump.play();\r\n                this.jumping = true;\r\n                this.body.blocked.down = false;\r\n                if (this.movingRight) {\r\n                    this.scale.x = this.size;\r\n                }\r\n                else if (this.movingLeft) {\r\n                    this.scale.x = -this.size;\r\n                }\r\n            }\r\n        }\r\n        fall() {\r\n            if (this.jumping) {\r\n                if (this.body.velocity.y < 0)\r\n                    this.body.velocity.y = -this.body.velocity.y / 4;\r\n            }\r\n        }\r\n    }\r\n    exports.Player = Player;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Player.ts?");

/***/ }),

/***/ "./scripts/Preloader.ts":
/*!******************************!*\
  !*** ./scripts/Preloader.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Preloader extends Phaser.State {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.ready = false;\r\n        }\r\n        preload() {\r\n            this.game.load.spritesheet('dude', 'assets/sprites/dude_spritesheet.png?v=1', 16, 25, 8);\r\n            this.game.load.image('enemy1', 'assets/sprites/enemy.png?v=1');\r\n            this.game.load.spritesheet('bat', 'assets/sprites/bat_spritesheet.png?v=1', 16, 16, 10);\r\n            this.game.load.spritesheet('greygem', 'assets/sprites/itens/spr_coin_cin.png?v=1', 16, 16, 4);\r\n            this.game.load.spritesheet('redgem', 'assets/sprites/itens/spr_coin_ver.png?v=1', 16, 16, 4);\r\n            this.game.load.spritesheet('torch', 'assets/sprites/animated_torch.png?v=1', 8, 26, 9);\r\n            this.game.load.spritesheet('shield', 'assets/sprites/shield.png?v=1', 16, 17, 6);\r\n            this.game.load.image('heart', 'assets/sprites/itens/heart.png');\r\n            this.game.load.image('titlepage', 'assets/images/back.png');\r\n            this.game.load.image('logo', 'assets/images/logo.png');\r\n            this.game.load.image('hud', 'assets/images/hud.png');\r\n            this.game.load.image('heart2', 'assets/images/heart.png');\r\n            this.game.load.image('jungle_paralax5', 'assets/levels/jungle/plx-5.png?v=1');\r\n            this.game.load.image('jungle_paralax4', 'assets/levels/jungle/plx-4.png?v=1');\r\n            this.game.load.image('jungle_paralax3', 'assets/levels/jungle/plx-3.png?v=1');\r\n            this.game.load.image('jungle_paralax2', 'assets/levels/jungle/plx-2.png?v=1');\r\n            this.game.load.spritesheet('jungle_tileset', 'assets/levels/jungle/jungle_tileset.png', 16, 16);\r\n            this.game.load.tilemap('tileMap_level1', 'assets/levels/jungle1.json?v=1', null, Phaser.Tilemap.TILED_JSON);\r\n            this.game.load.tilemap('tileMap_level2', 'assets/levels/jungle2.json?v=1', null, Phaser.Tilemap.TILED_JSON);\r\n            this.game.load.tilemap('tileMap_level3', 'assets/levels/jungle3.json?v=1', null, Phaser.Tilemap.TILED_JSON);\r\n            this.game.load.tilemap('tileMap_level4', 'assets/levels/jungle4.json?v=1', null, Phaser.Tilemap.TILED_JSON);\r\n            this.game.load.image('arrowkeys', 'assets/sprites/arrows.png');\r\n            this.game.load.image('shift', 'assets/sprites/shift.png');\r\n            this.game.load.spritesheet('buttonvertical', 'assets/buttons/button-vertical.png', 64, 64);\r\n            this.game.load.spritesheet('buttonhorizontal', 'assets/buttons/button-horizontal.png', 96, 64);\r\n            this.game.load.spritesheet('buttondiagonal', 'assets/buttons/button-diagonal.png', 64, 64);\r\n            this.game.load.spritesheet('buttonfire', 'assets/buttons/button-round-a.png', 96, 96);\r\n            this.game.load.spritesheet('buttonjump', 'assets/buttons/button-round-b.png', 96, 96);\r\n            this.game.load.audio('coincatch', 'assets/sounds/sfx/coin-catch.mp3');\r\n            this.game.load.audio('damage', 'assets/sounds/sfx/damage.mp3');\r\n            this.game.load.audio('enemydamage', 'assets/sounds/sfx/enemy-damage.mp3');\r\n            this.game.load.audio('fall', 'assets/sounds/sfx/fall.mp3');\r\n            this.game.load.audio('jump', 'assets/sounds/sfx/jump.mp3');\r\n            this.game.load.audio('bgmusic', 'assets/sounds/music/bg.mp3');\r\n        }\r\n        create() {\r\n            this.game.state.start('MainMenu');\r\n        }\r\n    }\r\n    exports.Preloader = Preloader;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/Preloader.ts?");

/***/ }),

/***/ "./scripts/SoundManager.ts":
/*!*********************************!*\
  !*** ./scripts/SoundManager.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class SoundManager {\r\n        constructor(game) {\r\n            this.loaded = false;\r\n            this.game = game;\r\n            this.gemcatch = this.game.add.audio('coincatch');\r\n            this.damage = this.game.add.audio('damage');\r\n            this.enemydamage = this.game.add.audio('enemydamage');\r\n            this.fall = this.game.add.audio('fall');\r\n            this.jump = this.game.add.audio('jump');\r\n            this.music = this.game.add.audio('bgmusic');\r\n            this.game.sound.setDecodedCallback([this.gemcatch, this.damage,\r\n                this.enemydamage, this.fall,\r\n                this.jump, this.music], this.loadComplete, this);\r\n        }\r\n        loadComplete() {\r\n            this.music.loop = true;\r\n            this.music.play();\r\n            this.loaded = true;\r\n        }\r\n    }\r\n    exports.SoundManager = SoundManager;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/SoundManager.ts?");

/***/ }),

/***/ "./scripts/items/Shield.ts":
/*!*********************************!*\
  !*** ./scripts/items/Shield.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Shield extends Phaser.Sprite {\r\n        constructor(game, x, y) {\r\n            super(game, x, y, 'shield', 0);\r\n            this.lightSize = 8;\r\n            this.game = game;\r\n            // sprite size\r\n            this.size = 2.5;\r\n            this.scale.setTo(this.size, this.size);\r\n            // animation\r\n            this.frame = 3;\r\n            this.animations.add('shine', [0, 0, 0, 0, 1, 2, 3,\r\n                4, 5, 4, 3, 2, 1, 0], 10, true);\r\n            this.animations.play('shine');\r\n            // sprite anchor\r\n            this.anchor.setTo(0.5, 0);\r\n            game.add.existing(this);\r\n        }\r\n        update() {\r\n        }\r\n    }\r\n    exports.Shield = Shield;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/items/Shield.ts?");

/***/ }),

/***/ "./scripts/levels/Level1.ts":
/*!**********************************!*\
  !*** ./scripts/levels/Level1.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Player */ \"./scripts/Player.ts\"), __webpack_require__(/*! ./LevelManager */ \"./scripts/levels/LevelManager.ts\"), __webpack_require__(/*! ./LevelBase */ \"./scripts/levels/LevelBase.ts\"), __webpack_require__(/*! ../Hud */ \"./scripts/Hud.ts\"), __webpack_require__(/*! ../items/Shield */ \"./scripts/items/Shield.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Player_1, LevelManager_1, LevelBase_1, Hud_1, Shield_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Level1 extends Phaser.State {\r\n        init(soundManager) {\r\n            this.soundManager = soundManager;\r\n        }\r\n        create() {\r\n            this.soundManager.music.volume = 0.1;\r\n            this.levelBase = new LevelBase_1.LevelBase();\r\n            this.levelManager = new LevelManager_1.LevelManager(this.game, this.levelBase, 'Level2', this.soundManager);\r\n            // ---- level genesis\r\n            this.levelManager.createBasicLevelStuff('tileMap_level1');\r\n            // ---- tutorial sprites\r\n            this.arrowKeysSprite = this.game.add.sprite(180, 265, 'arrowkeys');\r\n            this.arrowKeysSprite.scale.setTo(3);\r\n            this.arrowKeysSprite.alpha = 0;\r\n            this.shiftSprite = this.game.add.sprite(1650, 265, 'shift');\r\n            this.shiftSprite.scale.setTo(2.5);\r\n            this.shiftSprite.alpha = 0;\r\n            // ---- player\r\n            this.player = new Player_1.Player(this.game, 10, 300, 150, this.game.physics.arcade.gravity.y, 0, 3, this.soundManager);\r\n            this.game.camera.follow(this.player);\r\n            this.shield = new Shield_1.Shield(this.game, 300, 300);\r\n            // ---- hud and game\r\n            this.hud = new Hud_1.Hud(this.game, this.player);\r\n            this.game.world.bringToTop(this.hud);\r\n        }\r\n        update() {\r\n            if (this.game.device.desktop)\r\n                this.showDesktopButtons();\r\n            else\r\n                this.showMobileButtons();\r\n            this.game.physics.arcade.collide(this.player, this.levelBase.walls);\r\n            this.levelManager.updateBasicLevelStuff(this.player);\r\n        }\r\n        showDesktopButtons() {\r\n            if (this.checkProximityFirstTutorial())\r\n                this.game.add.tween(this.arrowKeysSprite).to({ alpha: 1 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            else\r\n                this.game.add.tween(this.arrowKeysSprite).to({ alpha: 0 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            if (this.checkProximitySecondTutorial())\r\n                this.game.add.tween(this.shiftSprite).to({ alpha: 1 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            else\r\n                this.game.add.tween(this.shiftSprite).to({ alpha: 0 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n        }\r\n        showMobileButtons() {\r\n            if (this.checkProximityFirstTutorial())\r\n                this.game.add.tween(this.player.controller.buttonjump.scale).to({ x: 1.2, y: 1.2 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            else\r\n                this.game.add.tween(this.player.controller.buttonjump.scale).to({ x: 1, y: 1 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            if (this.checkProximitySecondTutorial())\r\n                this.game.add.tween(this.player.controller.buttonfire.scale).to({ x: 1.2, y: 1.2 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n            else\r\n                this.game.add.tween(this.player.controller.buttonfire.scale).to({ x: 1, y: 1 }, 300, Phaser.Easing.Linear.None, true, 0, 0, true);\r\n        }\r\n        checkProximityFirstTutorial() {\r\n            return (this.player.x > this.arrowKeysSprite.x - 120 && this.player.x < this.arrowKeysSprite.x + 100);\r\n        }\r\n        checkProximitySecondTutorial() {\r\n            return (this.player.x > this.shiftSprite.x - 120 && this.player.x < this.shiftSprite.x + 150);\r\n        }\r\n        render() {\r\n            this.game.debug.text(\": \" + this.player.gems.toString(), 662, 40);\r\n        }\r\n    }\r\n    exports.Level1 = Level1;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/Level1.ts?");

/***/ }),

/***/ "./scripts/levels/Level2.ts":
/*!**********************************!*\
  !*** ./scripts/levels/Level2.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Player */ \"./scripts/Player.ts\"), __webpack_require__(/*! ./LevelManager */ \"./scripts/levels/LevelManager.ts\"), __webpack_require__(/*! ../Hud */ \"./scripts/Hud.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Player_1, LevelManager_1, Hud_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Level2 extends Phaser.State {\r\n        init(player, soundManager, previousLevelBase, previousLevelManager) {\r\n            this.lastPlayer = player;\r\n            this.soundManager = soundManager;\r\n            this.levelBase = previousLevelBase;\r\n            player.destroy();\r\n            previousLevelBase = null;\r\n            previousLevelManager = null;\r\n        }\r\n        create() {\r\n            this.levelManager = new LevelManager_1.LevelManager(this.game, this.levelBase, 'Level3', this.soundManager);\r\n            // ---- level genesis\r\n            this.levelManager.createBasicLevelStuff('tileMap_level2');\r\n            // ---- player\r\n            this.player = new Player_1.Player(this.game, 10, 300, 150, this.game.physics.arcade.gravity.y, this.lastPlayer.gems, this.lastPlayer.lives, this.soundManager);\r\n            this.game.camera.follow(this.player);\r\n            // ---- hud and game\r\n            this.hud = new Hud_1.Hud(this.game, this.player);\r\n            this.game.world.bringToTop(this.hud);\r\n        }\r\n        update() {\r\n            this.game.physics.arcade.collide(this.player, this.levelBase.walls);\r\n            this.levelManager.updateBasicLevelStuff(this.player);\r\n        }\r\n        render() {\r\n            this.game.debug.text(\": \" + this.player.gems.toString(), 662, 40);\r\n        }\r\n    }\r\n    exports.Level2 = Level2;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/Level2.ts?");

/***/ }),

/***/ "./scripts/levels/Level3.ts":
/*!**********************************!*\
  !*** ./scripts/levels/Level3.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Player */ \"./scripts/Player.ts\"), __webpack_require__(/*! ./LevelManager */ \"./scripts/levels/LevelManager.ts\"), __webpack_require__(/*! ../Hud */ \"./scripts/Hud.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Player_1, LevelManager_1, Hud_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Level3 extends Phaser.State {\r\n        init(player, soundManager, previousLevelBase, previousLevelManager) {\r\n            this.lastPlayer = player;\r\n            this.soundManager = soundManager;\r\n            this.levelBase = previousLevelBase;\r\n            player.destroy();\r\n            previousLevelBase = null;\r\n            previousLevelManager = null;\r\n        }\r\n        create() {\r\n            this.levelManager = new LevelManager_1.LevelManager(this.game, this.levelBase, 'Level4', this.soundManager);\r\n            // ---- level genesis (without parallax, so must set each one)\r\n            this.levelManager.createMap('tileMap_level3');\r\n            this.game.world.bringToTop(this.levelManager.level.back);\r\n            this.game.world.bringToTop(this.levelManager.level.walls);\r\n            this.levelManager.createGreenEnemies();\r\n            this.levelManager.createGems();\r\n            this.levelManager.createRedGems();\r\n            // ---- player\r\n            this.player = new Player_1.Player(this.game, 80, 50, 150, this.game.physics.arcade.gravity.y, this.lastPlayer.gems, this.lastPlayer.lives, this.soundManager);\r\n            this.game.camera.follow(this.player);\r\n            // ---- bats\r\n            this.levelManager.createBats(this.player);\r\n            // shadow setup\r\n            this.shadowTexture = this.game.add.bitmapData(this.game.width + 100, this.game.height + 100);\r\n            this.lightSprite = this.game.add.image(this.game.camera.x, this.game.camera.y, this.shadowTexture);\r\n            this.lightSprite.blendMode = Phaser.blendModes.MULTIPLY;\r\n            // ---- hud and game\r\n            this.hud = new Hud_1.Hud(this.game, this.player);\r\n            this.game.world.bringToTop(this.hud);\r\n        }\r\n        update() {\r\n            this.updateShadowTexture();\r\n            this.game.physics.arcade.collide(this.player, this.levelBase.walls);\r\n            this.levelManager.updateRedGemsInteraction(this.player);\r\n            this.levelManager.updateGemsInteraction(this.player);\r\n            this.levelManager.updateEnemiesInteraction(this.player);\r\n            this.levelManager.updateBatsInteraction(this.player);\r\n        }\r\n        render() {\r\n            this.game.debug.text(\": \" + this.player.gems.toString(), 662, 40);\r\n        }\r\n        updateShadowTexture() {\r\n            this.lightSprite.reset(this.game.camera.x, this.game.camera.y);\r\n            this.shadowTexture.clear();\r\n            this.shadowTexture.context.fillStyle = 'rgb(10, 10, 10, 0.75)';\r\n            this.shadowTexture.context.fillRect(-25, -25, this.game.width + 100, this.game.height + 100);\r\n            var radius = 150 + this.game.rnd.integerInRange(1, 20), torchX = this.player.position.x - this.game.camera.x, torchY = this.player.position.y - this.game.camera.y;\r\n            var gradient = this.shadowTexture.context.createRadialGradient(torchX, torchY, 100 * 0.75, torchX, torchY, radius);\r\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 1.0)');\r\n            gradient.addColorStop(1, 'rgba(255, 255, 255, 0.0)');\r\n            this.shadowTexture.context.beginPath();\r\n            this.shadowTexture.context.fillStyle = gradient;\r\n            this.shadowTexture.context.arc(torchX, torchY, radius, 0, Math.PI * 2, false);\r\n            this.shadowTexture.context.fill();\r\n            this.shadowTexture.dirty = true;\r\n        }\r\n    }\r\n    exports.Level3 = Level3;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/Level3.ts?");

/***/ }),

/***/ "./scripts/levels/Level4.ts":
/*!**********************************!*\
  !*** ./scripts/levels/Level4.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Player */ \"./scripts/Player.ts\"), __webpack_require__(/*! ./LevelManager */ \"./scripts/levels/LevelManager.ts\"), __webpack_require__(/*! ../Hud */ \"./scripts/Hud.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Player_1, LevelManager_1, Hud_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class Level4 extends Phaser.State {\r\n        init(player, soundManager, previousLevelBase, previousLevelManager) {\r\n            this.lastPlayer = player;\r\n            this.soundManager = soundManager;\r\n            this.levelBase = previousLevelBase;\r\n            player.destroy();\r\n            previousLevelBase = null;\r\n            previousLevelManager = null;\r\n        }\r\n        create() {\r\n            this.levelManager = new LevelManager_1.LevelManager(this.game, this.levelBase, 'Level5', this.soundManager);\r\n            // ---- level genesis\r\n            this.levelManager.createBasicLevelStuff('tileMap_level4');\r\n            // ---- player\r\n            this.player = new Player_1.Player(this.game, 100, 200, 150, this.game.physics.arcade.gravity.y, this.lastPlayer.gems, this.lastPlayer.lives, this.soundManager);\r\n            this.game.camera.follow(this.player);\r\n            // ---- hud and game\r\n            this.hud = new Hud_1.Hud(this.game, this.player);\r\n            this.game.world.bringToTop(this.hud);\r\n        }\r\n        update() {\r\n            this.game.physics.arcade.collide(this.player, this.levelBase.walls);\r\n            this.levelManager.updateBasicLevelStuff(this.player);\r\n        }\r\n        render() {\r\n            this.game.debug.text(\": \" + this.player.gems.toString(), 662, 40);\r\n        }\r\n    }\r\n    exports.Level4 = Level4;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/Level4.ts?");

/***/ }),

/***/ "./scripts/levels/LevelBase.ts":
/*!*************************************!*\
  !*** ./scripts/levels/LevelBase.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class LevelBase {\r\n        constructor() {\r\n            this.bats = [];\r\n            this.enemies = [];\r\n            this.enemySpeed = 100;\r\n        }\r\n    }\r\n    exports.LevelBase = LevelBase;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/LevelBase.ts?");

/***/ }),

/***/ "./scripts/levels/LevelManager.ts":
/*!****************************************!*\
  !*** ./scripts/levels/LevelManager.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Enemy */ \"./scripts/Enemy.ts\"), __webpack_require__(/*! ../Bat */ \"./scripts/Bat.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Enemy_1, Bat_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class LevelManager {\r\n        constructor(game, level, nextLevel, soundManager) {\r\n            this.game = game;\r\n            this.level = level;\r\n            this.nextLevel = nextLevel;\r\n            this.level.lastCameraPositionX = 0;\r\n            this.soundManager = soundManager;\r\n        }\r\n        createBasicLevelStuff(jsonTilemap) {\r\n            this.createMap(jsonTilemap);\r\n            this.createParallax();\r\n            this.game.world.bringToTop(this.level.back);\r\n            this.game.world.bringToTop(this.level.walls);\r\n            this.createGreenEnemies();\r\n            this.createGems();\r\n            this.createRedGems();\r\n        }\r\n        updateBasicLevelStuff(player) {\r\n            this.updateRedGemsInteraction(player);\r\n            this.updateGemsInteraction(player);\r\n            this.updateEnemiesInteraction(player);\r\n            this.updateParallax(player.speed);\r\n        }\r\n        createMap(jsonTilemap) {\r\n            this.level.map = this.game.add.tilemap(jsonTilemap);\r\n            this.level.map.addTilesetImage('jungletileset', 'jungle_tileset');\r\n            this.level.map.setCollisionBetween(1, 2000, true, 'walls');\r\n            this.level.back = this.level.map.createLayer('back');\r\n            this.level.back.setScale(2);\r\n            this.level.walls = this.level.map.createLayer('walls');\r\n            this.level.walls.setScale(2);\r\n            this.level.walls.resizeWorld();\r\n        }\r\n        createParallax() {\r\n            this.level.paralax2 = this.game.add.tileSprite(0, this.game.world.height - 430, this.game.world.width, this.game.world.height + 100, 'jungle_paralax2');\r\n            this.level.paralax2.tileScale.x = 2;\r\n            this.level.paralax2.tileScale.y = 2;\r\n            this.level.paralax3 = this.game.add.tileSprite(0, this.game.world.height - 435, this.game.world.width, this.game.world.height + 100, 'jungle_paralax3');\r\n            this.level.paralax3.tileScale.x = 2;\r\n            this.level.paralax3.tileScale.y = 2;\r\n            this.level.paralax4 = this.game.add.tileSprite(0, this.game.world.height - 450, this.game.world.width, this.game.world.height + 100, 'jungle_paralax4');\r\n            this.level.paralax4.tileScale.x = 2;\r\n            this.level.paralax4.tileScale.y = 2;\r\n            this.level.paralax5 = this.game.add.tileSprite(0, this.game.world.height - 460, this.game.world.width, this.game.world.height + 100, 'jungle_paralax5');\r\n            this.level.paralax5.tileScale.x = 2;\r\n            this.level.paralax5.tileScale.y = 2;\r\n            this.level.paralax5.checkWorldBounds = true;\r\n        }\r\n        createGreenEnemies() {\r\n            this.level.map.objects.enemies.forEach(function (data) {\r\n                this.level.enemies.push(new Enemy_1.Enemy(this.game, data.x * 2, data.y * 1.7, this.game.physics.arcade.gravity.y, this.level.enemySpeed));\r\n            }.bind(this));\r\n        }\r\n        createBats(player) {\r\n            this.playerRef = player;\r\n            this.level.map.objects.bats.forEach(function (data) {\r\n                this.level.bats.push(new Bat_1.Bat(this.game, data.x * 2, data.y * 1.5, this.game.physics.arcade.gravity.y, 125, this.playerRef));\r\n            }.bind(this));\r\n        }\r\n        createGems() {\r\n            this.level.gems = this.game.add.physicsGroup();\r\n            this.level.map.createFromObjects('gems', 'gem1', 'greygem', 0, true, false, this.level.gems);\r\n            this.level.gems.forEach(function (gem) {\r\n                gem = this.gemSetup(gem);\r\n            }.bind(this));\r\n        }\r\n        createRedGems() {\r\n            this.level.redGems = this.game.add.physicsGroup();\r\n            this.level.map.createFromObjects('redgems', 'redgem', 'redgem', 0, true, false, this.level.redGems);\r\n            this.level.redGems.forEach(function (gem) {\r\n                gem = this.gemSetup(gem);\r\n            }.bind(this));\r\n        }\r\n        updateParallax(playerSpeed) {\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {\r\n                if (this.game.camera.position.x != this.level.lastCameraPositionX) {\r\n                    this.level.paralax4.tilePosition.x += playerSpeed / 1875;\r\n                    this.level.paralax3.tilePosition.x += playerSpeed / 6000;\r\n                    this.level.paralax2.tilePosition.x += playerSpeed / 30000;\r\n                }\r\n            }\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {\r\n                if (this.game.camera.position.x != this.level.lastCameraPositionX) {\r\n                    this.level.paralax4.tilePosition.x -= playerSpeed / 1875;\r\n                    this.level.paralax3.tilePosition.x -= playerSpeed / 6000;\r\n                    this.level.paralax2.tilePosition.x -= playerSpeed / 30000;\r\n                }\r\n            }\r\n            this.level.lastCameraPositionX = this.game.camera.position.x;\r\n        }\r\n        updateEnemiesInteraction(player) {\r\n            this.game.physics.arcade.collide(this.level.enemies, this.level.walls);\r\n            this.game.physics.arcade.overlap(player, this.level.enemies, this.enemyOverlap.bind(this));\r\n        }\r\n        updateBatsInteraction(player) {\r\n            this.game.physics.arcade.collide(this.level.bats, this.level.walls);\r\n            this.game.physics.arcade.overlap(player, this.level.bats, this.enemyOverlap.bind(this));\r\n        }\r\n        updateGemsInteraction(player) {\r\n            this.game.physics.arcade.collide(this.level.gems, this.level.walls);\r\n            this.game.physics.arcade.overlap(player, this.level.gems, this.gemsCollect.bind(this), null, this);\r\n        }\r\n        updateRedGemsInteraction(player) {\r\n            this.game.physics.arcade.collide(this.level.redGems, this.level.walls);\r\n            this.game.physics.arcade.overlap(player, this.level.redGems, this.goNextLevel.bind(this), null, this);\r\n        }\r\n        enemyOverlap(player, enemy) {\r\n            if (player.body.touching.down) {\r\n                if ((player.position.y) < (enemy.position.y - (enemy.height - 5))) {\r\n                    this.soundManager.enemydamage.play();\r\n                    enemy.body.enable = false;\r\n                    player.jumping = false;\r\n                    if (player.pressingUp)\r\n                        player.body.velocity.y = -player.jumpStrength - player.jumpBonus - 2;\r\n                    else\r\n                        player.body.velocity.y = -player.jumpStrength / 2;\r\n                    enemy.destroy();\r\n                }\r\n                else {\r\n                    player.playerDamage(this.soundManager);\r\n                }\r\n            }\r\n            else {\r\n                player.playerDamage(this.soundManager);\r\n            }\r\n        }\r\n        gemSetup(gem) {\r\n            gem.x = gem.x * 2;\r\n            gem.y = gem.y * 1.7;\r\n            gem.scale.setTo(1.8, 2);\r\n            gem.body.immovable = true;\r\n            gem.body.bounce.y = 0.3;\r\n            gem.animations.add('shine', [0, 1, 2, 3], 8, true);\r\n            gem.animations.play('shine');\r\n            return gem;\r\n        }\r\n        gemsCollect(player, gem) {\r\n            this.soundManager.gemcatch.play();\r\n            player.gems++;\r\n            gem.destroy();\r\n        }\r\n        goNextLevel(player) {\r\n            this.soundManager.gemcatch.play();\r\n            this.level.enemies.forEach(function (enemy) {\r\n                enemy.destroy();\r\n            });\r\n            this.game.state.start(this.nextLevel, true, false, player, this.soundManager, this.level, this);\r\n        }\r\n    }\r\n    exports.LevelManager = LevelManager;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./scripts/levels/LevelManager.ts?");

/***/ })

/******/ });